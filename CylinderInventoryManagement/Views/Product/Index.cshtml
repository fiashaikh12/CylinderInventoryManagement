@model CIM.Entities.ClsProductModel

@{
    Layout = "/Views/Shared/_Layout.cshtml";
}

<section class="content">
    <!-- SELECT2 EXAMPLE -->
    <div class="box box-default">
        <div class="box-header with-border">
            <h3 class="box-title">Add Cylinder</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
            </div>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
            <div class="row">
                <div class="col-md-6 col-md-offset-3">
                    @using (Html.BeginForm("CreateProduct", "Product", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        {
                            string cssClass = "";
                            string visibility = "none";
                            if (TempData["Message"] != null)
                            {

                                if (TempData["Message"].ToString().Contains("Success"))
                                {
                                    cssClass = "success";
                                }
                                else if (TempData["Message"].ToString().Contains("Failed"))
                                {
                                    cssClass = "info";
                                }
                                visibility = "block";
                            }
                    <div class="alert alert-@cssClass alert-dismissible" style="display:@visibility">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                        <h4><i class="icon fa fa-info"></i> Alert!</h4>
                        @TempData["Message"]
                    </div>
                        }
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.CategoryId)
                            @Html.DropDownListFor(model => model.CategoryId, ViewBag.Category as List<SelectListItem>, "Select category", new { @class = "form-control select2", @tabindex = "-1" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SubCategoryId)
                            @Html.DropDownListFor(model => model.SubCategoryId, ViewBag.SubCategory as List<SelectListItem>, "Select subcategory", new { @class = "form-control select2", @tabindex = "-1" })
                            @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Quantity)
                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IsDepositAllowed)
                            @Html.CheckBoxFor(model => model.IsDepositAllowed, htmlAttributes: new { @class = "minimal-red" })
                            @Html.ValidationMessageFor(model => model.IsDepositAllowed, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IsExchangeAllowed)
                            @Html.CheckBoxFor(model => model.IsExchangeAllowed, htmlAttributes: new { @class = "minimal-red" })
                            @Html.ValidationMessageFor(model => model.IsExchangeAllowed, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Price)
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @placeholder = "Price" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    }
                </div>
            </div>
            <!-- /.row -->
        </div>
    </div>
    <!-- /.box -->
</section>